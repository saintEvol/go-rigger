syntax = "proto3";
import "github.com/AsynkronIT/protoactor-go/actor/protos.proto";
package rigger;

// 表示Rigger通用错误, 可以跨节点传递,因此可以用来表示进程间消息处理的错误
message Error {
    string errStr = 1;
}

// 用于远程启动子进程的命令
message RemoteStartChildCmd {
    bytes specOrArgs = 1;
}

// 表示成功的回复
message OkResp {

}

// 表示出错的回复
message ErrorResp {
    string error = 1;
}

// 起进程回复
message SpawnResponse {
    actor.PID sender = 1;
    actor.PID parent = 2;
    actor.PID pid = 3;
    string error = 4;
}

message SpawnLoacalApplicationSpec {
    string launchConfigPath = 1;
    string applicationConfigPath = 2;
    string applicationId = 3;
}

message SpawnLocalApplicationResp {
    string error = 1;
}

message hotUpdateSpec {

}
