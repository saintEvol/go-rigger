package globalManager

import (
	"github.com/AsynkronIT/protoactor-go/actor"
	"github.com/saintEvol/go-rigger/rigger"
)

type globalManagerApp struct {
	
}

func (g globalManagerApp) OnRestarting(ctx actor.Context) {
	panic("implement me")
}

func (g globalManagerApp) OnStarted(ctx actor.Context, args interface{}) error {
	panic("implement me")
}

func (g globalManagerApp) OnPostStarted(ctx actor.Context, args interface{}) {
	panic("implement me")
}

func (g globalManagerApp) OnStopping(ctx actor.Context) {
	panic("implement me")
}

func (g globalManagerApp) OnStopped(ctx actor.Context) {
	panic("implement me")
}

func (g globalManagerApp) OnGetSupFlag(ctx actor.Context) (supFlag rigger.SupervisorFlag, childSpecs []*rigger.SpawnSpec) {
	panic("implement me")
}

